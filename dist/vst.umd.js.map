{"version":3,"file":"vst.umd.js","sources":["../src/ts/components/loading_row.vue","../src/ts/use/filterable.ts","../src/ts/components/slim_table.vue"],"sourcesContent":["<template>\n  <tr>\n    <td\n      :colspan=\"columnsLength\"\n      :class=\"['vst-loading-row', `vst-loading-row-${randNum}`]\">\n      <div />\n    </td>\n  </tr>\n</template>\n\n<script lang=\"ts\" setup>\ndefineProps({\n  columnsLength: { type: Number, required: true },\n})\n\nconst randNum = Math.floor(Math.random() * 10) + 1\n</script>\n","import {\n  ref, computed, reactive, watch,\n} from 'vue'\n\ntype CombinedFilters<T> = T & {\n  page: number\n}\n\ntype UseFiltetableArgs<T, S> = {\n  initialFilters: T,\n  loadItems: (_params: T & { page: number }) => Promise<S[]>\n}\n\nconst SYNC_STATES = {\n  INITIAL: 'initial',\n  SYNCING: 'syncing',\n  SYNCED: 'synced',\n  FAILED: 'failed',\n} as const\n\ntype SynsState = (typeof SYNC_STATES)[keyof typeof SYNC_STATES]\n\nconst useFilterable = <TFilters, TItem>({ initialFilters, loadItems }: UseFiltetableArgs<TFilters, TItem>) => {\n  const page = ref(1)\n  const items: { value: TItem[] } = reactive({ value: [] })\n  const syncState = ref<SynsState>(SYNC_STATES.INITIAL)\n  const filters = reactive({ value: initialFilters })\n\n  const combinedFilters = computed<CombinedFilters<TFilters>>(() => ({\n    page: page.value,\n    ...filters.value as TFilters,\n  }))\n\n  const load = async () => {\n    syncState.value = SYNC_STATES.SYNCING\n\n    try {\n      items.value = await loadItems(combinedFilters.value)\n      syncState.value = SYNC_STATES.SYNCED\n    } catch {\n      items.value = []\n      syncState.value = SYNC_STATES.FAILED\n    }\n  }\n  load()\n\n  watch(combinedFilters, load)\n\n  return {\n    page,\n    items,\n    syncState,\n    nextPage: () => {\n      page.value += 1\n    },\n    prevPage: () => {\n      page.value -= 1\n    },\n    isSyncing: computed(() => syncState.value === SYNC_STATES.SYNCING),\n    isSynced: computed(() => syncState.value === SYNC_STATES.SYNCED),\n    isFailed: computed(() => syncState.value === SYNC_STATES.FAILED),\n    reload: () => {\n      load()\n    },\n    refetch: () => {\n      if (page.value === 1) {\n        load()\n      } else {\n        page.value = 1\n      }\n    },\n  }\n}\n\nexport default useFilterable\n","<template>\n  <table class=\"vst\">\n    <thead v-if=\"columns.length\">\n      <slot name=\"thead:before\" />\n      <slot name=\"thead\" :columns=\"columns\" :orders=\"orders\">\n        <tr>\n          <th\n            v-for=\"column in columns\"\n            :key=\"column.key\"\n            :class=\"['vst-th', { 'vst-orderable': column.orderable }]\"\n            v-on=\"column.orderable ? { click: (event: Event) => onOrderClick(event, column.key) } : {}\">\n            <div v-if=\"column.orderable\">\n              <slot\n                :name=\"`thead:${column.key}`\"\n                :column=\"column\"\n                :orders=\"orders\">\n                {{ column.title }}\n              </slot>\n\n              <i :class=\"['vst-orderable-toggle', orders[column.key]]\" />\n            </div>\n\n            <slot\n              v-else\n              :name=\"`thead:${column.key}`\"\n              :column=\"column\"\n              :orders=\"orders\">\n              {{ column.title }}\n            </slot>\n          </th>\n        </tr>\n      </slot>\n      <slot name=\"thead:after\" />\n    </thead>\n    <tbody>\n      <slot v-if=\"isSyncing\" name=\"row:loading\">\n        <LoadingRow\n          v-for=\"i in perPage\"\n          :key=\"`loadingRow${i}`\"\n          :columns-length=\"columns.length\" />\n      </slot>\n\n      <slot v-else-if=\"isSynced && rows.value.length === 0\" name=\"row:empty\">\n        <tr>\n          <td :colspan=\"columns.length\">\n            No records found\n          </td>\n        </tr>\n      </slot>\n\n      <template v-else-if=\"isSynced && rows.value.length\">\n        <slot\n          v-for=\"(row, i) in rows.value\"\n          name=\"row\"\n          :row=\"row\"\n          :index=\"i\"\n          :columns=\"columns\">\n          <tr :key=\"row['id'] || i\">\n            <td\n              v-for=\"column in columns\"\n              :key=\"column.key\">\n              <slot\n                :name=\"`cell:${column.key}`\"\n                :row=\"row\"\n                :value=\"row[column.key]\"\n                :column=\"column\"\n                :index=\"i\">\n                {{ row[column.key] }}\n              </slot>\n            </td>\n          </tr>\n        </slot>\n      </template>\n    </tbody>\n    <tfoot>\n      <tr>\n        <td :colspan=\"columns.length\">\n          <slot name=\"pagination\" :page=\"page\" :rows=\"rows.value\">\n            <ul\n              v-if=\"page > 1 || rows.value.length === perPage || isSyncing\"\n              class=\"vst-pagination mt-3\">\n              <li :class=\"['vst-page-item', { disabled: page === 1 || isSyncing }]\">\n                <a class=\"vst-page-link\" @click.prevent=\"prevPage\">←</a>\n              </li>\n\n              <li\n                :class=\"['vst-page-item', {\n                  disabled: rows.value.length < perPage || isSyncing\n                }]\">\n                <a class=\"vst-page-link\" @click.prevent=\"nextPage\">→</a>\n              </li>\n            </ul>\n          </slot>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n</template>\n\n<script setup lang=\"ts\" generic=\"TRow extends TableRow\">\nimport { shallowRef } from 'vue'\nimport LoadingRow from './loading_row.vue'\n\nimport useFilterable from '../use/filterable'\n\nimport type {\n  TableOrders, TableFetchParams, TableRow, TableFilters, TableProps, TableSlots,\n} from '@/ts/types'\n\nconst orders = shallowRef<TableOrders>({})\nconst props = defineProps<TableProps<TRow>>()\n\nconst loadItems = async (params: TableFetchParams) => {\n  let data: TRow[] = []\n\n  try {\n    data = await props.source(params)\n  } catch {\n    // TODO: show errors\n  }\n\n  return data\n}\n\nconst onOrderClick = (event: Event, key: string) => {\n  event.preventDefault()\n\n  if (orders.value[key] === 'asc') {\n    orders.value = { [key]: 'desc' }\n  } else if (orders.value[key] === 'desc') {\n    orders.value = {}\n  } else {\n    orders.value = { [key]: 'asc' }\n  }\n}\n\nconst {\n  page, isSyncing, isSynced, prevPage, nextPage, reload, refetch, items: rows,\n} = useFilterable<TableFilters, TRow>({\n  initialFilters: { per_page: props.perPage, orders },\n  loadItems,\n})\n\ndefineSlots<TableSlots<TRow>>()\n\ndefineExpose({\n  refetch,\n  reload,\n  rows,\n})\n</script>\n"],"names":["randNum","SYNC_STATES","useFilterable","initialFilters","loadItems","page","ref","items","reactive","syncState","filters","combinedFilters","computed","load","watch","orders","shallowRef","params","data","props","onOrderClick","event","key","isSyncing","isSynced","prevPage","nextPage","reload","refetch","rows","__expose"],"mappings":"kaAeA,MAAMA,EAAU,KAAK,MAAM,KAAK,SAAW,EAAE,EAAI,mMCF3CC,EAAc,CAClB,QAAS,UACT,QAAS,UACT,OAAQ,SACR,OAAQ,QACV,EAIMC,EAAgB,CAAkB,CAAE,eAAAC,EAAgB,UAAAC,KAAoD,CACtG,MAAAC,EAAOC,MAAI,CAAC,EACZC,EAA4BC,EAAS,SAAA,CAAE,MAAO,CAAA,CAAI,CAAA,EAClDC,EAAYH,EAAAA,IAAeL,EAAY,OAAO,EAC9CS,EAAUF,EAAA,SAAS,CAAE,MAAOL,CAAgB,CAAA,EAE5CQ,EAAkBC,EAAAA,SAAoC,KAAO,CACjE,KAAMP,EAAK,MACX,GAAGK,EAAQ,KACX,EAAA,EAEIG,EAAO,SAAY,CACvBJ,EAAU,MAAQR,EAAY,QAE1B,GAAA,CACFM,EAAM,MAAQ,MAAMH,EAAUO,EAAgB,KAAK,EACnDF,EAAU,MAAQR,EAAY,MAAA,MACxB,CACNM,EAAM,MAAQ,GACdE,EAAU,MAAQR,EAAY,MAChC,CAAA,EAEG,OAAAY,IAELC,QAAMH,EAAiBE,CAAI,EAEpB,CACL,KAAAR,EACA,MAAAE,EACA,UAAAE,EACA,SAAU,IAAM,CACdJ,EAAK,OAAS,CAChB,EACA,SAAU,IAAM,CACdA,EAAK,OAAS,CAChB,EACA,UAAWO,EAAS,SAAA,IAAMH,EAAU,QAAUR,EAAY,OAAO,EACjE,SAAUW,EAAS,SAAA,IAAMH,EAAU,QAAUR,EAAY,MAAM,EAC/D,SAAUW,EAAS,SAAA,IAAMH,EAAU,QAAUR,EAAY,MAAM,EAC/D,OAAQ,IAAM,CACPY,GACP,EACA,QAAS,IAAM,CACTR,EAAK,QAAU,EACZQ,IAELR,EAAK,MAAQ,CAEjB,CAAA,CAEJ,yOCqCMU,EAASC,aAAwB,CAAA,CAAE,EAGnCZ,EAAY,MAAOa,GAA6B,CACpD,IAAIC,EAAe,CAAA,EAEf,GAAA,CACKA,EAAA,MAAMC,EAAM,OAAOF,CAAM,CAAA,MAC1B,CAER,CAEO,OAAAC,CAAA,EAGHE,EAAe,CAACC,EAAcC,IAAgB,CAClDD,EAAM,eAAe,EAEjBN,EAAO,MAAMO,CAAG,IAAM,MACxBP,EAAO,MAAQ,CAAE,CAACO,CAAG,EAAG,MAAO,EACtBP,EAAO,MAAMO,CAAG,IAAM,OAC/BP,EAAO,MAAQ,GAEfA,EAAO,MAAQ,CAAE,CAACO,CAAG,EAAG,KAAM,CAChC,EAGI,CACJ,KAAAjB,EAAM,UAAAkB,EAAW,SAAAC,EAAU,SAAAC,EAAU,SAAAC,EAAU,OAAAC,EAAQ,QAAAC,EAAS,MAAOC,GACrE3B,EAAkC,CACpC,eAAgB,CAAE,SAAUiB,EAAM,QAAS,OAAAJ,CAAO,EAClD,UAAAX,CAAA,CACD,EAIY,OAAA0B,EAAA,CACX,QAAAF,EACA,OAAAD,EACA,KAAAE,CAAA,CACD"}